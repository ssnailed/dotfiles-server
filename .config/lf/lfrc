# Basic vars
set ratios 1:2:4
set shellopts '-eu'
set ifs "\n"
set findlen 1
set scrolloff 10
set icons
set wrapscroll
set period 1
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/clean
set promptfmt "\033[34;1m%u\033[36m@\033[34m%h \033[35m[\033[0;1m%d\033[33m%f\033[35m]\033[0m"

cmd open ${{
  case $(file --mime-type "$(readlink -f $f)" -b) in
    text/*|application/json|inode/x-empty) $EDITOR $fx;;
    application/pgp-encrypted) $EDITOR $fx ;;
  esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "extract?[y/N]"
    read ans
    [ $ans = "y" ] && aunpack $fx
}}

cmd delete ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "delete?[y/N]"
    read ans
    [ $ans = "y" ] && rm -rf -- $fx
}}

cmd trash ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "trash?[y/N]"
    read ans
    if [ $ans = "y" ]; then 
        for f in $fx; do
            echo $f
            trash-put $f
        done
    fi
}}

cmd rsyncto %{{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    clear; echo "rsync to where?"
    read dest
    for x in $fx; do
          eval rsync -aAXHv \"$x\" \"$dest\"
    done
}}

# y (select for copy) and P to paste soft-link
# d (select for cut) and P to paste hard-link
cmd link %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}

cmd bulkrename $vidir

cmd on-cd &{{
    DIR=$(echo $PWD | sed "s|$HOME|~|")
    printf "\033]0;ïœ¡ $DIR\007" > /dev/tty
}}
on-cd

cmd on-quit ${{
    DIR=$(echo $PWD | sed "s|$HOME|~|")
    printf "\033]0; $DIR\007" > /dev/tty
}}

cmd paste &{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    case "$mode" in
        copy)
            rsync -av --ignore-existing --progress -- "$@" . |
            stdbuf -i0 -o0 -e0 tr '\r' '\n' |
            while IFS= read -r line; do
                lf -remote "send $id echo $line"
            done
            ;;
        move) mv -n -- "$@" .;;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}

cmd share $curl -F"file=@$fx" https://0x0.snaile.de | xclip -r -selection c

# Bindings
map <c-c>a $lf -remote "send $id select '$(fzf)'"
map <c-c>t $lf -remote "send $id select '$(cat ${XDG_DATA_HOME:-$HOME/.local/share}/lf/tags | sed 's/:\*$//' | fzf)'"
map <c-c>f $lf -remote "send $id select '$(cat ${XDG_DATA_HOME:-$HOME/.local/share}/lf/shortcut-files | fzf)'"
map <c-c>d $lf -remote "send $id cd '$(cat ${XDG_DATA_HOME:-$HOME/.local/share}/lf/shortcut-dirs | fzf)'"
map J $dir=$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf) && lf -remote "send $id cd $(eval echo $dir)"
map D trash
map <c-d> delete
map T $trash-restore $PWD
map <c-e> extract
map R rsyncto
map P link
map S share
map <c-g> $lazygit
map <c-v> push :!$EDITOR<space>
map <c-n> push :mkdir<space>
map <c-t> push :&touch<space>
map <c-r> reload
map <c-s> set hidden!
map <enter> shell
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen -a $f
map A rename # at the very end
map a push A<c-a> # at the very beginning
map I push A<a-b> # after extension
map i push A<a-b><a-b><a-f> # before extension
map c push A<c-u> # new rename
map B bulkrename
map b dupe
map u :clear; unselect
map n &echo $f | xclip -r -selection c
map <esc> quit
map N
map g/ cd "/" 
map W &setsid $TERMINAL -e $SHELL -c "lf; $SHELL"

# Load bookmark shortcuts
source "~/.config/lf/shortcutrc"
